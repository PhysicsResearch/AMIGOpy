# .gitlab-ci.yml

stages:
  - build
  - publish

variables:
  CONDA_ENV: amigo
  ENV_YML: amigo.yml
  PERSIST_DIR: C:/ci-artifacts/amigopy

build_and_package:
  stage: build
  tags:
    - shell
  before_script:
    # Ensure Conda is up-to-date
    - '& "C:\ProgramData\Anaconda3\condabin\conda.bat" update -n base -c defaults conda --yes'
    # Re-create the "amigo" env
    - 'Remove-Item -Recurse -Force "C:\ProgramData\Anaconda3\envs\$Env:CONDA_ENV" -ErrorAction SilentlyContinue'
    - '& "C:\ProgramData\Anaconda3\condabin\conda.bat" env create -f $Env:ENV_YML -n $Env:CONDA_ENV --quiet'
    # Prepare persistent folder on the runner
    - 'if (!(Test-Path "$Env:PERSIST_DIR")) { New-Item -ItemType Directory -Path "$Env:PERSIST_DIR" | Out-Null }'
  script:
    # Build one-dir bundle
    - '& "C:\ProgramData\Anaconda3\condabin\conda.bat" run -n amigo pyinstaller Launch_ImGUI.spec'
    # Create the installer
    - '& "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "compile.iss"'
    # Copy the final EXE to the persistent location
    - 'Copy-Item -Path "Output\mysetup.exe" -Destination "$Env:PERSIST_DIR\mysetup.exe" -Force'

publish_generic:
  stage: publish
  tags:
    - shell
  needs:
    - job: build_and_package
      artifacts: false
  script:
    # 1) Upload to Generic Package Registry
    - >
      curl.exe --silent 
        --header "JOB-TOKEN: $CI_JOB_TOKEN"
        --upload-file "$PERSIST_DIR\mysetup.exe"
        "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/nightly/$CI_PIPELINE_IID/mysetup.exe"
    # 2) Print the stable download URL
    - 'echo "Download URL:"'
    - 'echo "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/nightly/$CI_PIPELINE_IID/mysetup.exe"'

  when: on_success
