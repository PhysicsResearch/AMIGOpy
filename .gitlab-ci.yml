stages:
  - build
  - package

variables:
  # name of the conda env you want
  CONDA_ENV: amigo_env
  # path to your environment spec
  ENV_YML: amigo.yml

# ─── BUILD ─────────────────────────────────────────────────────────────────────
build:
  stage: build
  tags:
    - windows      # make sure your runner is tagged “windows”
    - shell        # …and “shell” (or whatever tag you chose when registering)
  before_script:
    # update conda, then create & activate your env
    - conda update -n base -c defaults conda --yes
    - conda env create -f $ENV_YML -n $CONDA_ENV
    - conda activate $CONDA_ENV
  script:
    # install PyInstaller into that env, then build your EXE
    - pip install pyinstaller
    - pyinstaller Launch_ImGUI.spec
  artifacts:
    paths:
      - dist/       # <-- PyInstaller’s output folder

# ─── PACKAGE ───────────────────────────────────────────────────────────────────
package:
  stage: package
  tags:
    - windows
    - shell
  dependencies:
    - build        # pulls in the dist/ folder from the build job
  before_script:
    - conda activate $CONDA_ENV
  script:
    # compile your Inno Setup script (compile.iss) into my_setup.exe
    - '"C:\Program Files (x86)\Inno Setup 6\ISCC.exe" compile.iss'
  artifacts:
    paths:
      - Output/my_setup.exe
